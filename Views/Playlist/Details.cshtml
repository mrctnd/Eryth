@model Eryth.ViewModels.PlaylistDetailsViewModel
@using Eryth.Models.Enums
@{
    ViewData["Title"] = Model?.Name ?? "Çalma Listesi Detayları";
}

<style>
    .bg-accent {
        background-color: #00ff87;
    }
    
    .text-accent {
        color: #00ff87;
    }
    
    .hover\:bg-accent:hover {
        background-color: #00ff87;
    }
    
    .hover\:text-accent:hover {
        color: #00ff87;
    }
    
    .bg-accent-dark {
        background-color: #00cc6a;
    }
    
    .hover\:bg-accent-dark:hover {
        background-color: #00cc6a;
    }
    
    .border-accent {
        border-color: #00ff87;
    }
    
    .border-accent\/30 {
        border-color: rgba(0, 255, 135, 0.3);
    }
    
    .bg-accent\/10 {
        background-color: rgba(0, 255, 135, 0.1);
    }
    
    .bg-accent\/20 {
        background-color: rgba(0, 255, 135, 0.2);
    }
    
    .shadow-accent\/30 {
        box-shadow: 0 0 30px rgba(0, 255, 135, 0.3);
    }
    
    .shadow-accent\/20 {
        box-shadow: 0 0 20px rgba(0, 255, 135, 0.2);
    }
    
    .bg-gradient-to-br {
        background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
    }
    
    .bg-gradient-to-r {
        background-image: linear-gradient(to right, var(--tw-gradient-stops));
    }
    
    .from-black {
        --tw-gradient-from: #000000;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
    }
    
    .via-gray-900 {
        --tw-gradient-stops: var(--tw-gradient-from), #111827, var(--tw-gradient-to, rgba(17, 24, 39, 0));
    }
    
    .to-black {
        --tw-gradient-to: #000000;
    }
    
    .from-accent {
        --tw-gradient-from: #00ff87;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 255, 135, 0));
    }
    
    .to-accent-dark {
        --tw-gradient-to: #00cc6a;
    }
    
    .backdrop-blur-md {
        backdrop-filter: blur(12px);
    }
    
    .bg-black\/95 {
        background-color: rgba(0, 0, 0, 0.95);
    }
    
    .bg-muted {
        background-color: #1a1a1a;
    }
    
    .border-muted {
        border-color: #333333;
    }
    
    .hover\:border-accent\/30:hover {
        border-color: rgba(0, 255, 135, 0.3);
    }
    
    .group-hover\:scale-105:hover {
        transform: scale(1.05);
    }
    
    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
    
    .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }
    
    .delay-1000 {
        animation-delay: 1000ms;
    }
</style>

<div class="min-h-screen bg-black text-white" data-playlist-id="@Model?.Id" data-playlist-name="@Model?.Name">
    @if (Model == null)
    {
        <div class="flex flex-col items-center justify-center py-20">
            <div class="bg-gradient-to-br from-muted to-black rounded-full p-8 mb-6 shadow-2xl border border-muted">
                <i data-lucide="music-off" class="w-16 h-16 text-accent"></i>
            </div>
            <h2 class="text-3xl font-bold text-white mb-3">Çalma Listesi Bulunamadı</h2>
            <p class="text-gray-400 mb-8 text-center max-w-md">Aradığınız çalma listesi mevcut değil veya erişilebilir durumda değil.</p>
            <a href="@Url.Action("MyPlaylists", "Playlist")" class="px-8 py-4 bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-white rounded-xl font-semibold transition-all duration-300 shadow-lg hover:shadow-accent/30 transform hover:scale-105 flex items-center">
                <i data-lucide="arrow-left" class="w-5 h-5 mr-2"></i>
                Çalma Listelerime Dön
            </a>
        </div>
        return;
    }

    <!-- Modern Playlist Header Section -->
    <div class="relative bg-black overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
            <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, #00ff87 1px, transparent 0); background-size: 20px 20px;"></div>
        </div>
        
        <!-- Floating Elements -->
        <div class="absolute top-20 right-20 w-32 h-32 bg-accent/10 rounded-full blur-xl animate-pulse"></div>
        <div class="absolute bottom-20 left-20 w-48 h-48 bg-accent/5 rounded-full blur-2xl animate-pulse delay-1000"></div>
        
        <div class="container mx-auto px-6 py-12 relative z-10">
            <div class="flex flex-col lg:flex-row items-start lg:items-end gap-8 lg:gap-12">
                <!-- Modern Playlist Cover -->
                <div class="relative group">
                    <div class="w-[280px] h-[280px] lg:w-[320px] lg:h-[320px] rounded-2xl overflow-hidden shadow-2xl bg-gradient-to-br from-muted to-black border border-muted group-hover:border-accent/30 transition-all duration-300">
                        @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                        {
                            <img src="@(Model.CoverImageUrl.StartsWith("http") ? Model.CoverImageUrl : "/" + Model.CoverImageUrl.TrimStart('/'))" alt="@Model.Name" class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500">
                        }
                        else
                        {
                            <div class="w-full h-full bg-gradient-to-br from-accent/20 to-black flex items-center justify-center">
                                <i data-lucide="music" class="w-20 h-20 text-accent/60"></i>
                            </div>
                        }
                        <!-- Modern Play Button Overlay -->
                        <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center">
                            <button class="bg-accent hover:bg-accent-dark text-white p-4 rounded-full shadow-2xl transition-all duration-200 transform scale-90 group-hover:scale-100 @(Model.TrackCount == 0 ? "opacity-50 cursor-not-allowed" : "")" @(Model.TrackCount == 0 ? "disabled" : "") onclick="playPlaylist()">
                                <i data-lucide="play" class="w-8 h-8 ml-1"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Modern Playlist Info -->
                <div class="flex-1 min-w-0">
                    <!-- Modern Badges Row -->
                    <div class="flex items-center gap-3 mb-6">
                        <span class="px-4 py-2 bg-gradient-to-r from-accent/20 to-accent/10 text-accent text-sm font-semibold rounded-xl border border-accent/30 backdrop-blur-sm">
                            ÇALMA LİSTESİ
                        </span>
                        @if (Model.Privacy == PlaylistPrivacy.Private)
                        {
                            <span class="px-4 py-2 bg-muted/80 text-gray-300 text-sm rounded-xl flex items-center border border-muted backdrop-blur-sm">
                                <i data-lucide="lock" class="w-3 h-3 mr-2"></i>Özel
                            </span>
                        }
                        else if (Model.Privacy == PlaylistPrivacy.UnlistedLink)
                        {
                            <span class="px-4 py-2 bg-muted/80 text-gray-300 text-sm rounded-xl flex items-center border border-muted backdrop-blur-sm">
                                <i data-lucide="link" class="w-3 h-3 mr-2"></i>Listelenmemiş
                            </span>
                        }
                        else
                        {
                            <span class="px-4 py-2 bg-muted/80 text-gray-300 text-sm rounded-xl flex items-center border border-muted backdrop-blur-sm">
                                <i data-lucide="globe" class="w-3 h-3 mr-2"></i>Herkese Açık
                            </span>
                        }
                    </div>
                    
                    <!-- Playlist Title with Gradient -->
                    <h1 class="text-4xl lg:text-6xl font-black text-transparent bg-clip-text bg-gradient-to-r from-white to-accent mb-6 leading-tight break-words">@Model.Name</h1>
                    
                    <!-- Description -->
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <p class="text-gray-300 text-lg mb-6 max-w-3xl leading-relaxed">@Model.Description</p>
                    }
                    
                    <!-- Modern Stats -->
                    <div class="flex items-center flex-wrap gap-6 text-gray-400 mb-8">
                        <a href="@Url.Action("Profile", "User", new { username = Model.OwnerUsername })" class="flex items-center hover:text-accent transition-colors group">
                            @if (!string.IsNullOrEmpty(Model.OwnerAvatarUrl))
                            {
                                <img src="@Model.OwnerAvatarUrl" alt="@Model.OwnerUsername" class="w-8 h-8 rounded-full mr-3 border border-gray-600 group-hover:border-accent/50 transition-colors">
                            }
                            else
                            {
                                <div class="w-8 h-8 bg-muted rounded-full mr-3 flex items-center justify-center border border-gray-600 group-hover:border-accent/50 transition-colors">
                                    <i data-lucide="user" class="w-4 h-4"></i>
                                </div>
                            }
                            <span class="font-medium">@Model.OwnerUsername</span>
                        </a>
                        <div class="flex items-center">
                            <i data-lucide="heart" class="w-4 h-4 mr-2 text-accent"></i>
                            <span>@Model.LikeCount beğeni</span>
                        </div>
                        <div class="flex items-center">
                            <i data-lucide="music" class="w-4 h-4 mr-2 text-accent"></i>
                            <span>@Model.TrackCount şarkı</span>
                        </div>
                        <div class="flex items-center">
                            <i data-lucide="clock" class="w-4 h-4 mr-2 text-accent"></i>
                            <span>@Model.FormattedDuration</span>
                        </div>
                        <div class="flex items-center">
                            <i data-lucide="calendar" class="w-4 h-4 mr-2 text-accent"></i>
                            <span>@Model.RelativeCreatedDate</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>    <!-- Modern Action Buttons -->
    <div class="sticky top-0 z-20 bg-black/95 backdrop-blur-md border-b border-muted">
        <div class="container mx-auto px-6 py-4">
            <div class="flex flex-wrap items-center justify-between gap-4">
                <!-- Primary Actions -->
                <div class="flex items-center gap-4">
                    <!-- Play Button -->
                    <button id="play-button" class="bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-white font-semibold px-8 py-3 rounded-xl flex items-center gap-3 transition-all duration-300 shadow-lg hover:shadow-accent/30 transform hover:scale-105 @(Model.TrackCount == 0 ? "opacity-50 cursor-not-allowed" : "")" @(Model.TrackCount == 0 ? "disabled" : "")>
                        <i data-lucide="play" class="w-5 h-5"></i>
                        <span>Oynat</span>
                    </button>

                    <!-- Shuffle Button -->
                    <button class="bg-muted hover:bg-gray-700 text-white px-6 py-3 rounded-xl flex items-center gap-3 transition-all duration-300 border border-muted hover:border-accent/30 @(Model.TrackCount == 0 ? "opacity-50 cursor-not-allowed" : "")" @(Model.TrackCount == 0 ? "disabled" : "")>
                        <i data-lucide="shuffle" class="w-5 h-5"></i>
                        <span>Karıştır</span>
                    </button>

                    <!-- Add Track Button -->
                    @if (Model.CanAddTracks)
                    {
                        <button id="add-track-btn" class="bg-muted hover:bg-gray-700 text-white px-6 py-3 rounded-xl flex items-center gap-3 transition-all duration-300 border border-muted hover:border-accent/30" onclick="openAddTrackModal()">
                            <i data-lucide="plus" class="w-5 h-5"></i>
                            <span>Şarkı Ekle</span>
                        </button>
                    }
                </div>

                <!-- Secondary Actions -->
                <div class="flex items-center gap-3">
                    <!-- Follow Playlist Button (if not owner) -->
                    @if (!Model.CanEdit)
                    {
                        var playlistFollowModel = FollowButtonViewModel.ForPlaylist(Model.Id, false, null, false);
                        playlistFollowModel.CssClasses = "p-3 rounded-xl";
                        @await Html.PartialAsync("_FollowButton", playlistFollowModel)
                    }

                    <!-- Follow Owner Button (if not owner and not already following) -->
                    @if (!Model.CanEdit && !Model.IsFollowingOwner)
                    {
                        var ownerFollowModel = FollowButtonViewModel.ForUser(Model.OwnerId, Model.IsFollowingOwner, null, false);
                        ownerFollowModel.CssClasses = "p-3 rounded-xl";
                        @await Html.PartialAsync("_FollowButton", ownerFollowModel)
                    }

                    <!-- Like Button -->
                    <button id="like-button" class="bg-muted hover:bg-gray-700 text-white p-3 rounded-xl transition-all duration-300 border border-muted hover:border-accent/30 group" onclick="toggleLike('@Model.Id')">
                        <i data-lucide="heart" class="w-5 h-5 @(Model.IsLikedByCurrentUser ? "text-accent fill-accent" : "group-hover:text-accent")"></i>
                    </button>

                    <!-- Share Button -->
                    <button class="bg-muted hover:bg-gray-700 text-white p-3 rounded-xl transition-all duration-300 border border-muted hover:border-accent/30 group" onclick="sharePlaylist('@Model.Id', '@Model.Name')">
                        <i data-lucide="share" class="w-5 h-5 group-hover:text-accent"></i>
                    </button>

                    <!-- More Options Dropdown -->
                    <div class="relative" id="playlist-options">
                        <button class="bg-muted hover:bg-gray-700 text-white p-3 rounded-xl transition-all duration-300 border border-muted hover:border-accent/30 group" onclick="toggleDropdown('playlist-menu')">
                            <i data-lucide="more-horizontal" class="w-5 h-5 group-hover:text-accent"></i>
                        </button>
                        <div id="playlist-menu" class="hidden absolute right-0 mt-3 w-56 bg-gradient-to-br from-muted to-black rounded-xl shadow-2xl border border-muted py-2 z-30 backdrop-blur-sm">
                            @if (Model.CanEdit)
                            {
                                <a href="@Url.Action("Edit", "Playlist", new { id = Model.Id })" class="flex items-center px-4 py-3 text-white hover:bg-black/50 hover:text-accent transition-all duration-300">
                                    <i data-lucide="edit" class="w-5 h-5 mr-3"></i>Çalma Listesi Düzenle
                                </a>
                            }
                            <button class="w-full flex items-center px-4 py-3 text-white hover:bg-black/50 hover:text-accent transition-all duration-300" onclick="duplicatePlaylist('@Model.Id')">
                                <i data-lucide="copy" class="w-5 h-5 mr-3"></i>Kopyala
                            </button>
                            <button class="w-full flex items-center px-4 py-3 text-white hover:bg-black/50 hover:text-accent transition-all duration-300" onclick="addToQueue('@Model.Id')">
                                <i data-lucide="list-plus" class="w-5 h-5 mr-3"></i>Kuyruğa Ekle
                            </button>
                            <hr class="border-muted/30 my-2">
                            @if (Model.CanDelete)
                            {
                                <button class="w-full flex items-center px-4 py-3 text-red-400 hover:bg-black/50 hover:text-red-300 transition-all duration-300" onclick="deletePlaylist('@Model.Id', '@Model.Name')">
                                    <i data-lucide="trash" class="w-5 h-5 mr-3"></i>Sil
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modern Tracks Section -->
    <div class="container mx-auto px-6 py-8">
        @if (Model.Tracks != null && Model.Tracks.Any())
        {
            <!-- Section Header -->
            <div class="flex items-center justify-between mb-8">
                <h2 class="text-3xl font-bold text-white">Şarkılar</h2>
                <div class="text-gray-400 text-sm flex items-center gap-2">
                    <i data-lucide="music" class="w-4 h-4 text-accent"></i>
                    @Model.TrackCount şarkı • @Model.FormattedDuration
                </div>
            </div>

            <!-- Modern Tracks Table -->
            <div class="bg-gradient-to-br from-muted to-black rounded-2xl overflow-hidden border border-muted shadow-2xl">
                <table class="w-full">
                    <thead class="border-b border-muted bg-gradient-to-r from-muted to-black">
                        <tr class="text-gray-400 text-sm font-semibold">
                            <th class="px-6 py-4 w-16 text-left">#</th>
                            <th class="px-6 py-4 text-left">Başlık</th>
                            <th class="px-6 py-4 text-left hidden md:table-cell">Sanatçı</th>
                            <th class="px-6 py-4 text-left hidden lg:table-cell">Albüm</th>
                            <th class="px-6 py-4 text-center w-20">
                                <i data-lucide="heart" class="w-4 h-4 inline"></i>
                            </th>
                            <th class="px-6 py-4 text-right w-20">
                                <i data-lucide="clock" class="w-4 h-4 inline"></i>
                            </th>
                            <th class="px-6 py-4 w-16"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ int index = 1; }
                        @foreach (var track in Model.Tracks)
                        {
                            <tr class="border-b border-muted/30 hover:bg-black/30 group transition-all duration-300" 
                                data-track-id="@track.TrackId"
                                data-audio-url="@(track.AudioFileUrl?.StartsWith("http") == true ? track.AudioFileUrl : "/" + track.AudioFileUrl?.TrimStart('/'))"
                                data-cover-image="@(track.CoverImageUrl?.StartsWith("http") == true ? track.CoverImageUrl : "/" + track.CoverImageUrl?.TrimStart('/'))">
                                <!-- Track Number / Play Button -->
                                <td class="px-6 py-4 text-gray-400">
                                    <div class="w-8 h-8 relative flex items-center justify-center">
                                        <span class="group-hover:opacity-0 transition-opacity text-sm font-medium">@index</span>
                                        <button class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity bg-accent hover:bg-accent-dark text-white rounded-full flex items-center justify-center shadow-lg" onclick="playTrack('@track.TrackId')">
                                            <i data-lucide="play" class="w-3 h-3 ml-0.5"></i>
                                        </button>
                                    </div>
                                </td>

                                <!-- Track Info -->
                                <td class="px-6 py-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 mr-4 flex-shrink-0 rounded-lg overflow-hidden bg-muted border border-muted group-hover:border-accent/30 transition-colors">
                                            @if (!string.IsNullOrEmpty(track.CoverImageUrl))
                                            {
                                                <img src="@(track.CoverImageUrl.StartsWith("http") ? track.CoverImageUrl : "/" + track.CoverImageUrl.TrimStart('/'))" alt="@track.Title" class="w-full h-full object-cover">
                                            }
                                            else
                                            {
                                                <div class="w-full h-full bg-gradient-to-br from-accent/20 to-black flex items-center justify-center">
                                                    <i data-lucide="music" class="w-4 h-4 text-accent/60"></i>
                                                </div>
                                            }
                                        </div>
                                        <div class="min-w-0 flex-1">
                                            <div class="font-semibold text-white truncate hover:text-accent transition-colors cursor-pointer track-title">@track.Title</div>
                                            <div class="text-gray-400 text-sm truncate md:hidden hover:text-accent transition-colors track-artist">@track.ArtistName</div>
                                        </div>
                                    </div>
                                </td>

                                <!-- Artist -->
                                <td class="px-6 py-4 text-gray-300 hidden md:table-cell">
                                    <span class="hover:text-accent hover:underline cursor-pointer transition-colors track-artist">@track.ArtistName</span>
                                </td>

                                <!-- Album -->
                                <td class="px-6 py-4 text-gray-300 hidden lg:table-cell">
                                    @if (!string.IsNullOrEmpty(track.AlbumName))
                                    {
                                        <span class="hover:text-accent hover:underline cursor-pointer transition-colors">@track.AlbumName</span>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">-</span>
                                    }
                                </td>

                                <!-- Like Button -->
                                <td class="px-6 py-4 text-center">
                                    @await Html.PartialAsync("_LikeButton", new Eryth.ViewModels.LikeButtonViewModel 
                                    { 
                                        TrackId = track.TrackId, 
                                        IsLiked = track.IsLikedByCurrentUser, 
                                        LikeCount = 0,
                                        ShowCount = false,
                                        ButtonClass = "opacity-0 group-hover:opacity-100 text-gray-400 hover:text-accent transition-all p-2 rounded-lg hover:bg-black/50"
                                    })
                                </td>

                                <!-- Duration -->
                                <td class="px-6 py-4 text-gray-400 text-right text-sm font-medium">@track.FormattedDuration</td>

                                <!-- Remove Button -->
                                <td class="px-6 py-4">
                                    @if (Model.CanEdit)
                                    {
                                        <button class="opacity-0 group-hover:opacity-100 text-gray-400 hover:text-red-400 transition-all p-2 rounded-lg hover:bg-black/50" onclick="removeTrack('@Model.Id', '@track.TrackId', '@track.Title')">
                                            <i data-lucide="x" class="w-4 h-4"></i>
                                        </button>
                                    }
                                </td>
                            </tr>
                            index++;
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <!-- Modern Empty State -->
            <div class="text-center py-20">
                <div class="max-w-md mx-auto">
                    <div class="bg-gradient-to-br from-accent/20 to-black rounded-3xl p-8 inline-flex mb-6 shadow-xl border border-accent/30">
                        <i data-lucide="music" class="w-16 h-16 text-accent"></i>
                    </div>
                    <h3 class="text-3xl font-bold text-white mb-4">Bu çalma listesinde henüz şarkı yok</h3>
                    <p class="text-gray-400 mb-8 leading-relaxed">Favori şarkılarınızı ekleyerek mükemmel çalma listenizi oluşturmaya başlayın.</p>
                    
                    <div class="flex flex-col sm:flex-row gap-4 justify-center">
                        @if (Model.CanAddTracks)
                        {
                            <button class="bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-white px-8 py-4 rounded-xl font-semibold transition-all duration-300 shadow-lg hover:shadow-accent/30 flex items-center justify-center gap-3 transform hover:scale-105" onclick="openAddTrackModal()">
                                <i data-lucide="plus" class="w-5 h-5"></i>
                                İlk Şarkınızı Ekleyin
                            </button>
                        }
                        <a href="@Url.Action("Index", "Explore")" class="bg-muted hover:bg-gray-700 text-white px-8 py-4 rounded-xl font-semibold transition-all duration-300 border border-muted hover:border-accent/30 flex items-center justify-center gap-3">
                            <i data-lucide="compass" class="w-5 h-5"></i>
                            Müzik Gezin
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Modern Add Track Modal -->
    <div id="addTrackModal" class="fixed inset-0 bg-black/90 z-50 hidden backdrop-blur-sm">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="bg-gradient-to-br from-muted to-black rounded-2xl shadow-2xl w-full max-w-3xl max-h-[80vh] overflow-hidden border border-muted">
                <!-- Modal Header -->
                <div class="flex items-center justify-between p-6 border-b border-muted bg-gradient-to-r from-muted to-black">
                    <h3 class="text-xl font-bold text-white">"<span class="text-accent">@Model.Name</span>" listesine şarkı ekle</h3>
                    <button onclick="closeAddTrackModal()" class="text-gray-400 hover:text-white p-2 rounded-xl hover:bg-black/50 transition-colors">
                        <i data-lucide="x" class="w-5 h-5"></i>
                    </button>
                </div>

                <!-- Search Section -->
                <div class="p-6 bg-muted/50 border-b border-muted">
                    <div class="relative">
                        <input type="text" 
                               id="trackSearch" 
                               placeholder="Şarkı, sanatçı veya albüm ara..." 
                               class="w-full bg-black/50 border border-muted rounded-xl px-4 py-3 pl-12 text-white placeholder-gray-400 focus:outline-none focus:border-accent focus:ring-2 focus:ring-accent/20 transition-all backdrop-blur-sm">
                        <i data-lucide="search" class="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-accent"></i>
                    </div>
                </div>

                <!-- Results Section -->
                <div class="overflow-y-auto max-h-80" id="searchResults">
                    <div class="p-12 text-center text-gray-400">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-accent/20 to-black rounded-full flex items-center justify-center border border-accent/30">
                            <i data-lucide="search" class="w-8 h-8 text-accent"></i>
                        </div>
                        <p class="text-lg font-semibold mb-2 text-white">Şarkı ara</p>
                        <p class="text-sm text-gray-400">Çalma listenize eklemek istediğiniz şarkıları bulmak için yazın</p>
                    </div>
                </div>

                <!-- Footer -->
                <div class="p-6 border-t border-muted bg-gradient-to-r from-muted to-black">
                    <div class="flex justify-end">
                        <button onclick="closeAddTrackModal()" 
                                class="px-6 py-3 bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-white rounded-xl transition-all duration-300 font-semibold shadow-lg hover:shadow-accent/30">
                            Tamam
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Anti-forgery token for AJAX requests *@
@Html.AntiForgeryToken()

@* Anti-forgery token for AJAX requests *@
@Html.AntiForgeryToken()

@section Scripts {
    <script src="~/js/playlist/playlistDetails.js"></script>
    <script>
        // Pass playlist data to JavaScript
        window.playlistData = {
            id: '@Model.Id',
            name: '@Html.Raw(Json.Serialize(Model.Name))'
        };
    </script>
}

