@model MessageConversationViewModel
@using Eryth.ViewModels
@{
    ViewData["Title"] = $"Konuşma - {Model.Subject}";
}

<div class="min-h-screen bg-black text-white">
    <!-- Hero Section -->
    <div class="relative overflow-hidden">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
            <div class="absolute inset-0"
                 style="background-image: radial-gradient(circle at 1px 1px, #00ff87 1px, transparent 0); background-size: 30px 30px;"></div>
        </div>

        <!-- Floating Elements -->
        <div class="absolute top-10 right-20 w-32 h-32 bg-accent/10 rounded-full blur-xl animate-pulse"></div>
        <div class="absolute bottom-20 left-10 w-48 h-48 bg-accent/5 rounded-full blur-2xl animate-pulse delay-1000"></div>

        <div class="max-w-6xl mx-auto px-6 py-8 relative z-10">
            <!-- Back Button -->
            <div class="mb-6">                <a href="/Message" class="inline-flex items-center space-x-2 text-gray-400 hover:text-accent transition-colors duration-200">
                    <i data-lucide="arrow-left" class="w-4 h-4"></i>
                    <span>Mesajlara Geri Dön</span>
                </a>
            </div>

            <!-- Chat Container -->
            <div class="bg-white/5 backdrop-blur-lg rounded-2xl border border-white/10 overflow-hidden">
                <!-- Header -->
                <div class="flex items-center justify-between p-6 border-b border-white/10">
                    <div class="flex items-center space-x-4">
                        <!-- Other User Avatar -->
                        @if (!string.IsNullOrEmpty(Model.OtherUserAvatarUrl))
                        {
                            <img src="@Model.OtherUserAvatarUrl" alt="@Model.OtherDisplayName" class="w-12 h-12 rounded-full object-cover border-2 border-accent/30">
                        }
                        else
                        {
                            <div class="w-12 h-12 bg-gradient-to-br from-accent/20 to-accent/10 rounded-full flex items-center justify-center border-2 border-accent/30">
                                <i data-lucide="user" class="w-6 h-6 text-accent"></i>
                            </div>
                        }

                        <!-- Conversation Info -->
                        <div class="flex-1">
                            <h2 class="text-xl font-bold text-white">@Model.OtherDisplayName</h2>
                            <p class="text-gray-400 text-sm">@@@Model.OtherUsername</p>
                            <p class="text-gray-500 text-xs mt-1 truncate max-w-xs">@Model.Subject</p>
                        </div>
                    </div>
                </div>

                <!-- Messages Area -->
                <div id="messages-container" class="h-96 overflow-y-auto p-6 space-y-4 bg-black/20">
                    @foreach (var message in Model.Messages)
                    {
                        <div class="flex @(message.SenderId == Model.CurrentUserId ? "justify-end" : "justify-start")">
                            <div class="max-w-xs lg:max-w-md">
                                <!-- Message Bubble -->
                                <div class="@(message.SenderId == Model.CurrentUserId
                                    ? "bg-gradient-to-r from-accent to-accent-dark text-black" 
                                    : "bg-white/10 text-white") rounded-2xl px-4 py-3 shadow-lg border @(message.SenderId == Model.CurrentUserId
                                    ? "border-accent/30" 
                                    : "border-white/20")">
                                    
                                    <!-- Message Content -->
                                    <p class="text-sm leading-relaxed">@message.Content</p>
                                    
                                    <!-- Message Time -->
                                    <div class="flex items-center justify-between mt-2 pt-2 border-t @(message.SenderId == Model.CurrentUserId
                                        ? "border-black/20" 
                                        : "border-white/20")">
                                        <span class="@(message.SenderId == Model.CurrentUserId
                                            ? "text-black/70" 
                                            : "text-gray-400") text-xs">@message.RelativeSentTime</span>
                                        @if (message.SenderId == Model.CurrentUserId)
                                        {
                                            <div class="flex items-center space-x-1">
                                                @if (message.IsRead)
                                                {  
                                                    <i data-lucide="check-check" class="w-3 h-3 text-black/70"></i>
                                                }
                                                else
                                                {
                                                    <i data-lucide="check" class="w-3 h-3 text-black/70"></i>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                                
                                <!-- Sender name (for received messages) -->
                                @if (message.SenderId != Model.CurrentUserId)
                                {
                                    <p class="text-gray-500 text-xs mt-1 ml-2">@message.SenderUsername</p>
                                }
                            </div>
                        </div>
                    }
                </div>

                <!-- Reply Input Area -->
                @if (Model.CanReply)
                {
                    <div class="border-t border-white/10 p-6">
                        <form id="reply-form" class="flex space-x-4">
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="conversationId" value="@Model.Id" />
                              <!-- Message Input -->
                            <div class="flex-1 relative">
                                <textarea id="reply-content" name="content" rows="2" placeholder="Yanıtınızı yazın..." required
                                          class="w-full bg-black/50 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-300 resize-none"></textarea>
                                <div class="text-red-400 text-sm mt-1 hidden" id="reply-error">Lütfen bir mesaj girin.</div>
                            </div>

                            <!-- Send Button -->
                            <button type="submit" class="bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-black px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105 flex items-center space-x-2">
                                <i data-lucide="send" class="w-4 h-4"></i>
                                <span>Gönder</span>
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/js/message/conversation.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}