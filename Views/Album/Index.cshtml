@model IEnumerable<Eryth.ViewModels.AlbumViewModel>
@{
    ViewData["Title"] = "Albümler";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var sortBy = ViewBag.SortBy ?? "recent";
    var totalCount = ViewBag.TotalCount ?? 0;
}

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .backdrop-blur-sm {
        backdrop-filter: blur(4px);
    }
    
    .bg-muted {
        background-color: #1a1a1a;
    }
    
    .border-muted {
        border-color: #333333;
    }
    
    .text-accent {
        color: #00ff87;
    }
    
    .bg-accent {
        background-color: #00ff87;
    }
    
    .hover\:bg-accent:hover {
        background-color: #00ff87;
    }
    
    .bg-accent\/10 {
        background-color: rgba(0, 255, 135, 0.1);
    }
    
    .bg-accent\/20 {
        background-color: rgba(0, 255, 135, 0.2);
    }
    
    .bg-accent\/5 {
        background-color: rgba(0, 255, 135, 0.05);
    }
    
    .bg-accent-dark {
        background-color: #00cc6a;
    }
    
    .from-accent {
        --tw-gradient-from: #00ff87;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 255, 135, 0));
    }
    
    .to-white {
        --tw-gradient-to: #ffffff;
    }
    
    .from-accent-dark {
        --tw-gradient-from: #00cc6a;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 204, 106, 0));
    }
    
    .to-accent {
        --tw-gradient-to: #00ff87;
    }
    
    .hover\:from-accent-dark:hover {
        --tw-gradient-from: #00cc6a;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 204, 106, 0));
    }
    
    .hover\:to-accent:hover {
        --tw-gradient-to: #00ff87;
    }
    
    .border-accent\/30 {
        border-color: rgba(0, 255, 135, 0.3);
    }
    
    .hover\:border-accent\/30:hover {
        border-color: rgba(0, 255, 135, 0.3);
    }
    
    .border-muted\/50 {
        border-color: rgba(51, 51, 51, 0.5);
    }
    
    .from-muted {
        --tw-gradient-from: #1a1a1a;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(26, 26, 26, 0));
    }
    
    .to-black {
        --tw-gradient-to: #000000;
    }
    
    .bg-black\/60 {
        background-color: rgba(0, 0, 0, 0.6);
    }
    
    .hover\:shadow-accent\/10:hover {
        box-shadow: 0 0 20px rgba(0, 255, 135, 0.1);
    }
    
    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
    
    .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }
    
    .delay-1000 {
        animation-delay: 1000ms;
    }
</style>

<div class="min-h-screen bg-black text-white">
    <!-- Hero Section -->
    <div class="relative overflow-hidden to-black pt-12 pb-24">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
            <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, #00ff87 1px, transparent 0); background-size: 30px 30px;"></div>
        </div>
        
        <!-- Floating Elements -->
        <div class="absolute top-10 right-20 w-32 h-32 bg-accent/10 rounded-full blur-xl animate-pulse"></div>
        <div class="absolute bottom-10 left-20 w-48 h-48 bg-accent/5 rounded-full blur-2xl animate-pulse delay-1000"></div>
        
        <div class="max-w-7xl mx-auto px-6 relative z-10">
            <div class="flex items-center justify-between flex-wrap gap-4">
                <div>                    <h1 class="text-4xl md:text-5xl font-black tracking-tight leading-none mb-4">
                        <span class="text-transparent bg-clip-text bg-gradient-to-r from-accent to-white">Albümleri</span> Keşfet
                    </h1>
                    <p class="text-xl text-gray-300">
                        Dünyanın dört bir yanından yetenekli sanatçıların muhteşem albüm koleksiyonlarını keşfedin
                    </p>
                </div>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div>                        <a href="@Url.Action("Create")" 
                           class="group bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-white px-8 py-4 rounded-xl font-semibold transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-accent/30 flex items-center whitespace-nowrap">
                            <i data-lucide="plus" class="w-5 h-5 mr-2 group-hover:rotate-90 transition-transform duration-300"></i>
                            Albüm Oluştur
                        </a>
                    </div>
                }
            </div>
            
            <!-- Filter and Sort Controls -->
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-6 mt-8">
                <div class="flex items-center space-x-4">
                    <div class="flex items-center space-x-2 bg-accent/10 backdrop-blur-sm rounded-full px-4 py-2 border border-accent/20">
                        <i data-lucide="disc-3" class="w-4 h-4 text-accent"></i>
                        <span class="text-accent font-semibold">@totalCount</span>
                        <span class="text-gray-400 text-sm">albüm</span>
                    </div>
                </div>

                <!-- Sort Options -->
                <div class="flex items-center space-x-4">
                    <span class="text-gray-400 text-sm font-medium">Sıralama:</span>
                    <div class="flex space-x-2">                        <a href="@Url.Action("Index", new { sortBy = "recent", page = 1 })" 
                           class="px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 @(sortBy == "recent" ? "bg-accent text-black" : "bg-white/10 text-gray-300 hover:bg-accent/20 hover:text-accent")">
                            En Yeni
                        </a>
                        <a href="@Url.Action("Index", new { sortBy = "trending", page = 1 })" 
                           class="px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 @(sortBy == "trending" ? "bg-accent text-black" : "bg-white/10 text-gray-300 hover:bg-accent/20 hover:text-accent")">
                            Popüler
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>    <!-- Content Section -->
    <div class="max-w-7xl mx-auto px-6 pb-20 -mt-8 relative z-10">
        @if (!Model.Any())
        {
            <div class="text-center py-20">
                <div class="w-32 h-32 bg-gradient-to-br from-accent/20 to-black rounded-3xl mx-auto mb-8 flex items-center justify-center">
                    <i data-lucide="disc-3" class="w-16 h-16 text-accent/60"></i>
                </div>                <h3 class="text-3xl font-bold text-white mb-4">Albüm Bulunamadı</h3>
                <p class="text-gray-400 text-lg mb-8">Şu anda mevcut albüm bulunmamaktadır.</p>
                @if (User.Identity?.IsAuthenticated == true)
                {                    <a href="@Url.Action("Create")" class="inline-flex items-center space-x-2 bg-gradient-to-r from-accent to-accent-dark text-white hover:from-accent-dark hover:to-accent px-6 py-3 rounded-lg font-medium transition-all duration-300 transform hover:-translate-y-1">
                        <i data-lucide="plus" class="w-5 h-5"></i>
                        <span>İlk Albümü Oluştur</span>
                    </a>
                }
            </div>
        }
        else
        {
            <!-- Albums Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-6 overflow-visible">
                @foreach (var album in Model)
                {
                    <div class="group bg-gradient-to-br from-muted to-black border border-muted/50 rounded-2xl hover:border-accent/30 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-accent/10 relative">
                        <!-- Album Cover -->
                        <div class="relative aspect-square overflow-hidden rounded-t-2xl">
                            @if (!string.IsNullOrEmpty(album.CoverImageUrl))
                            {
                                <img src="@album.CoverImageUrl" alt="@album.Title cover" class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500">
                            }
                            else
                            {
                                <div class="w-full h-full bg-gradient-to-br from-accent/20 to-black flex items-center justify-center">
                                    <i data-lucide="disc-3" class="w-20 h-20 text-accent/60"></i>
                                </div>
                            }

                            <!-- Play Overlay -->
                            <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center">
                                <button class="bg-accent hover:bg-accent-dark text-white p-4 rounded-full transition-all duration-200 transform scale-90 group-hover:scale-100 shadow-2xl" 
                                        onclick="playAlbum('@album.Id')">
                                    <i data-lucide="play" class="w-8 h-8 ml-1"></i>
                                </button>
                            </div>

                            <!-- Like Count Badge -->
                            @if (album.TotalLikeCount > 0)
                            {
                                <div class="absolute top-3 right-3 bg-red-500 text-white px-3 py-1 rounded-full text-xs font-medium backdrop-blur-sm">
                                    <i data-lucide="heart" class="w-3 h-3 inline mr-1 fill-current"></i>
                                    @album.TotalLikeCount
                                </div>
                            }
                        </div>
                        
                        <!-- Album Info -->
                        <a href="@Url.Action("Details", new { id = album.Id })" class="block p-6">
                            <h3 class="text-white font-bold text-lg truncate group-hover:text-accent transition-colors duration-300 mb-2">@album.Title</h3>                            <p class="text-gray-400 text-sm truncate mb-2">
                                @album.ArtistName tarafından
                            </p>
                            @if (!string.IsNullOrEmpty(album.Description))
                            {
                                <p class="text-gray-500 text-xs mb-3 line-clamp-2">@album.Description</p>
                            }
                            
                            <!-- Stats -->
                            <div class="flex items-center justify-between text-xs text-gray-500">
                                <div class="flex items-center space-x-3">
                                    <span class="flex items-center space-x-1">
                                        <i data-lucide="music" class="w-3 h-3 text-accent"></i>
                                        <span>@album.TrackCount</span>
                                    </span>
                                    <span class="flex items-center space-x-1">
                                        <i data-lucide="play" class="w-3 h-3 text-accent"></i>
                                        <span>@album.TotalPlayCount.ToString("N0")</span>
                                    </span>
                                </div>
                                <span class="flex items-center space-x-1">
                                    <i data-lucide="calendar" class="w-3 h-3 text-accent"></i>
                                    <span>@album.ReleaseDate.ToString("MMM yyyy")</span>
                                </span>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
    </div>
    </div>
</div>

@section Scripts {
    <script>        // Albüm çalma fonksiyonu
        function playAlbum(albumId) {
            console.log('Albüm çalınıyor:', albumId);
            
            if (window.musicPlayer) {
                fetch(`/api/album/${albumId}/tracks`)
                    .then(response => response.json())
                    .then(tracks => {
                        if (tracks && tracks.length > 0) {
                            window.musicPlayer.loadAndPlay(tracks[0].id);
                        }
                    })
                    .catch(error => console.error('Albüm parçaları yüklenirken hata:', error));
            }
        }
          // Sayfa yüklendikten sonra ikonları başlat
        document.addEventListener('DOMContentLoaded', function() {
            if (window.lucide) {
                window.lucide.createIcons();
            }
        });
    </script>
}
