@model AlbumViewModel
@using Eryth.ViewModels
@{
  ViewData["Title"] = $"{Model.Title} - Albüm";
}

<div class="min-h-screen bg-black text-white">
  @Html.AntiForgeryToken()
  <!-- Hero Section -->
  <div class="relative overflow-hidden">
    <!-- Background with consistent accent color -->
    <div class="absolute inset-0 bg-gradient-to-br from-black via-gray-900/90 to-black"></div>
    
    <!-- Background Pattern with accent color -->
    <div class="absolute inset-0 opacity-5">
      <div class="absolute inset-0"
        style="background-image: radial-gradient(circle at 1px 1px, #00ff87 1px, transparent 0); background-size: 30px 30px;">
      </div>
    </div>

    <!-- Floating Elements with consistent accent -->
    <div class="absolute top-10 right-20 w-32 h-32 bg-accent/10 rounded-full blur-xl animate-pulse"></div>
    <div class="absolute bottom-20 left-10 w-48 h-48 bg-accent/5 rounded-full blur-2xl animate-pulse delay-1000"></div>
    
    <div class="max-w-6xl mx-auto px-6 py-8 relative z-10">
      <!-- Album Header -->
      <div class="flex flex-col lg:flex-row items-start lg:items-center space-y-8 lg:space-y-0 lg:space-x-12 mb-12">
        <!-- Album Cover with consistent styling -->
        <div class="flex-shrink-0">
          <div class="w-48 h-48 lg:w-64 lg:h-64 rounded-2xl overflow-hidden shadow-2xl transform hover:scale-105 transition-transform duration-300 relative">
            @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
            {
              <img src="/@Model.CoverImageUrl.TrimStart('/')" alt="@Model.Title" class="w-full h-full object-cover">
              <!-- Accent gradient overlay -->
              <div class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent"></div>
            }
            else
            {
              <div class="w-full h-full bg-gradient-to-br from-accent/30 to-accent/10 flex items-center justify-center border border-accent/20">
                <i data-lucide="disc-3" class="w-16 h-16 text-accent"></i>
              </div>
            }
          </div>
        </div>

        <!-- Album Info -->
        <div class="flex-1 min-w-0 lg:pl-6">
          <div class="mb-3">
            <span class="inline-block px-3 py-1 bg-accent/20 text-accent text-sm font-medium rounded-full">Albüm</span>
          </div>

          <h1 class="text-3xl lg:text-4xl font-black mb-3 leading-tight">
            <span class="text-transparent bg-clip-text bg-gradient-to-r from-accent to-white">@Model.Title</span>
          </h1>

          <div class="flex flex-wrap items-center gap-4 text-gray-300 mb-6">
            <div class="flex items-center space-x-2">
              <i data-lucide="user" class="w-4 h-4"></i>
              <span>@Model.ArtistName</span>
            </div>
            @if (Model.ReleaseDate != default(DateTime))
            {
              <div class="flex items-center space-x-2">
                <i data-lucide="calendar" class="w-4 h-4"></i>
                <span>@Model.ReleaseDate.Year</span>
              </div>
            }

            @if (ViewBag.Tracks != null)
            {
              <div class="flex items-center space-x-2">
                <i data-lucide="music" class="w-4 h-4"></i>                <span>@((ViewBag.Tracks as IEnumerable<TrackViewModel>)?.Count() ?? 0) şarkı</span>
              </div>
            }

            <div class="flex items-center space-x-2">
              <i data-lucide="heart" class="w-4 h-4"></i>
              <span>@Model.TotalLikeCount beğeni</span>
            </div>

            <div class="flex items-center space-x-2">
              <i data-lucide="play" class="w-4 h-4"></i>
              <span>@Model.TotalPlayCount dinlenme</span>
            </div>
          </div> @if (!string.IsNullOrEmpty(Model.Description))
          {
            <p class="text-gray-300 leading-relaxed mb-4 max-w-2xl">@Model.Description</p>
          }          
          <!-- Enhanced Action Buttons with Edit/Delete -->
          <div class="flex flex-wrap gap-3">
            <button
              class="bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-black px-6 py-2 rounded-lg font-semibold transition-all duration-300 hover:scale-105 flex items-center space-x-2">
              <i data-lucide="play" class="w-4 h-4"></i>              <span>Albümü Çal</span>
            </button>

            <button
              class="bg-white/10 hover:bg-white/20 text-white px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2">
              <i data-lucide="heart" class="w-4 h-4"></i>
              <span>Beğen</span>
            </button>

            <button
              class="bg-white/10 hover:bg-white/20 text-white px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2">
              <i data-lucide="share" class="w-4 h-4"></i>
              <span>Paylaş</span>
            </button>

            <!-- Album Management Buttons (Only for album owner) -->
            @if (Model.CanEdit)
            {
              <div class="flex gap-2 ml-2 border-l border-white/20 pl-4">
                <a href="@Url.Action("Edit", "Album", new { id = Model.Id })"
                   class="bg-accent/20 hover:bg-accent/30 text-accent px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2 border border-accent/30 hover:border-accent/50">
                  <i data-lucide="edit" class="w-4 h-4"></i>                  <span>Albümü Düzenle</span>
                </a>

                <button onclick="showDeleteAlbumModal()"
                        class="bg-red-500/20 hover:bg-red-500/30 text-red-400 px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2 border border-red-500/30 hover:border-red-500/50">
                  <i data-lucide="trash-2" class="w-4 h-4"></i>
                  <span>Albümü Sil</span>
                </button>
              </div>
            }
          </div>
        </div>
      </div>
    </div>
  </div> <!-- Album Content -->
  <div class="max-w-6xl mx-auto px-6 pb-12 relative z-10">
    <!-- Tracks Section --> @if (ViewBag.Tracks != null && ((IEnumerable<TrackViewModel>)ViewBag.Tracks).Any())
    {
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 overflow-hidden mb-8">
        <div class="border-b border-white/10 p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-2xl font-bold text-white flex items-center space-x-3">
              <div
                class="w-8 h-8 bg-gradient-to-br from-accent to-accent-dark rounded-lg flex items-center justify-center">
                <i data-lucide="list-music" class="w-4 h-4 text-white"></i>
              </div>
              <span>Tracks</span>
            </h2>
            @if (Model.CanEdit)
            {
              <button onclick="showAddTrackModal()"
                class="bg-accent/20 hover:bg-accent/30 text-accent px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2">
                <i data-lucide="plus" class="w-4 h-4"></i>
                <span>Add Track</span>
              </button>
            }
          </div>
        </div>

        <div class="divide-y divide-white/5">
          @{
            var tracks = (IEnumerable<TrackViewModel>)ViewBag.Tracks;
            var trackNumber = 1;
          }

          @foreach (var track in tracks)
          {
            <div class="track-item p-4 hover:bg-white/5 transition-all duration-300 cursor-pointer group">
              <div class="flex items-center space-x-4">
                <!-- Track Number -->
                <div class="w-8 text-center">
                  <span class="text-gray-400 group-hover:hidden">@trackNumber</span>
                  <i data-lucide="play" class="w-4 h-4 text-accent hidden group-hover:block"></i>
                </div>

                <!-- Track Cover -->
                <div class="w-12 h-12 rounded-lg overflow-hidden flex-shrink-0">
                  @if (!string.IsNullOrEmpty(track.CoverImageUrl))
                  {
                    <img src="@track.CoverImageUrl" alt="@track.Title" class="w-full h-full object-cover">
                  }
                  else
                  {
                    <div class="w-full h-full bg-gradient-to-br from-accent/20 to-accent/10 flex items-center justify-center">
                      <i data-lucide="music" class="w-4 h-4 text-accent"></i>
                    </div>
                  }
                </div>

                <!-- Track Info -->
                <div class="flex-1 min-w-0">
                  <h4 class="text-white font-medium truncate group-hover:text-accent transition-colors duration-200">
                    @track.Title</h4>
                  <p class="text-gray-400 text-sm truncate">@track.ArtistName</p>
                </div>

                <!-- Duration -->
                <div class="text-gray-400 text-sm">
                  @TimeSpan.FromSeconds(track.DurationInSeconds).ToString(@"m\:ss")
                </div>

                <!-- Actions -->
                <div class="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                  <button
                    class="text-gray-400 hover:text-accent transition-colors duration-200 p-2 rounded-lg hover:bg-white/10">
                    <i data-lucide="heart" class="w-4 h-4"></i>
                  </button>
                  <button
                    class="text-gray-400 hover:text-accent transition-colors duration-200 p-2 rounded-lg hover:bg-white/10">
                    <i data-lucide="more-horizontal" class="w-4 h-4"></i>
                  </button>
                </div>
              </div>
            </div>
            trackNumber++;
          }
        </div>
      </div>
    }
        else
    {

      <!-- No Tracks Message -->
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 overflow-hidden mb-8">
        <div class="border-b border-white/10 p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-2xl font-bold text-white flex items-center space-x-3">
              <div
                class="w-8 h-8 bg-gradient-to-br from-accent to-accent-dark rounded-lg flex items-center justify-center">
                <i data-lucide="list-music" class="w-4 h-4 text-white"></i>
              </div>
              <span>Tracks</span>
            </h2>
            @if (Model.CanEdit)
            {
              <button onclick="showAddTrackModal()"
                class="bg-accent/20 hover:bg-accent/30 text-accent px-4 py-2 rounded-lg font-medium transition-all duration-300 flex items-center space-x-2">
                <i data-lucide="plus" class="w-4 h-4"></i>
                <span>Add Track</span>
              </button>
            }
          </div>
        </div>
        <div class="p-8 text-center">
          <div
            class="w-16 h-16 bg-gradient-to-br from-accent/20 to-accent/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <i data-lucide="music" class="w-8 h-8 text-accent"></i>
          </div>
          <p class="text-gray-400">No tracks have been added to this album yet.</p>
        </div>
      </div>
    }

    <!-- Album Info -->
    <div class="grid md:grid-cols-2 gap-8">
      <!-- About Section -->
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 p-6">
        <h3 class="text-xl font-bold text-white mb-4 flex items-center space-x-3">
          <div class="w-6 h-6 bg-gradient-to-br from-accent to-accent-dark rounded-lg flex items-center justify-center">
            <i data-lucide="info" class="w-3 h-3 text-white"></i>
          </div>
          <span>Album Information</span>
        </h3>

        <div class="space-y-4 text-gray-300"> @if (Model.ReleaseDate != default(DateTime))
          {
            <div class="flex justify-between">
              <span class="text-gray-400">Release Date:</span>
              <span>@Model.ReleaseDate.ToString("MMMM dd, yyyy")</span>
            </div>
          }

          <div class="flex justify-between">
            <span class="text-gray-400">Genre:</span>
            <span>@Model.PrimaryGenre.ToString()</span>
          </div>

          @if (!string.IsNullOrEmpty(Model.RecordLabel))
          {
            <div class="flex justify-between">
              <span class="text-gray-400">Label:</span>
              <span>@Model.RecordLabel</span>
            </div>
          }

          <div class="flex justify-between">
            <span class="text-gray-400">Total Plays:</span>
            <span>@Model.TotalPlayCount.ToString("N0")</span>
          </div>

          <div class="flex justify-between">
            <span class="text-gray-400">Total Likes:</span>
            <span>@Model.TotalLikeCount.ToString("N0")</span>
          </div>
        </div>
      </div>

      <!-- Similar Albums -->
      <div class="bg-white/5 backdrop-blur-sm rounded-2xl border border-white/10 p-6">
        <h3 class="text-xl font-bold text-white mb-4 flex items-center space-x-3">
          <div class="w-6 h-6 bg-gradient-to-br from-accent to-accent-dark rounded-lg flex items-center justify-center">
            <i data-lucide="disc" class="w-3 h-3 text-white"></i>
          </div>
          <span>More from @Model.ArtistName</span>
        </h3>

        <div class="text-gray-400 text-center py-8">
          <i data-lucide="disc" class="w-12 h-12 mx-auto mb-3 opacity-50"></i>
          <p>More albums coming soon</p>
        </div>
      </div>
    </div>  </div>
</div>

<!-- Delete Album Confirmation Modal -->
<div id="delete-album-modal" class="fixed inset-0 z-50 hidden">
  <div class="fixed inset-0 bg-black/80 backdrop-blur-sm" onclick="hideDeleteAlbumModal()"></div>
  <div class="fixed inset-0 flex items-center justify-center p-4">
    <div class="bg-white/10 backdrop-blur-sm rounded-2xl border border-red-500/30 w-full max-w-md p-8 transform transition-all duration-300 ease-out scale-95 opacity-0" id="delete-album-content">
      <!-- Modal Header -->
      <div class="text-center mb-6">
        <div class="w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
          <i data-lucide="alert-triangle" class="w-8 h-8 text-red-400"></i>
        </div>
        <h3 class="text-2xl font-bold text-white mb-2">Delete Album</h3>
        <p class="text-gray-300">Are you sure you want to delete "<span class="text-accent font-medium">@Model.Title</span>"?</p>
        <p class="text-red-400 text-sm mt-2">This action cannot be undone and will remove all tracks from this album.</p>
      </div>

      <!-- Actions -->
      <div class="flex space-x-4">
        <button type="button" onclick="hideDeleteAlbumModal()" 
                class="flex-1 bg-white/10 hover:bg-white/20 text-white px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Cancel
        </button>
        <button type="button" onclick="deleteAlbum('@Model.Id')" 
                class="flex-1 bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105">
          Delete Album
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Add Track Modal -->
<div id="add-track-modal" class="fixed inset-0 z-50 hidden">
  <div class="fixed inset-0 bg-black/80 backdrop-blur-sm" onclick="hideAddTrackModal()"></div>
  <div class="fixed inset-0 flex items-center justify-center p-4">
    <div
      class="bg-white/10 backdrop-blur-sm rounded-2xl border border-white/10 w-full max-w-2xl p-8 transform transition-all duration-300 ease-out scale-95 opacity-0"
      id="add-track-content">
      <!-- Modal Header -->
      <div class="flex items-center justify-between mb-6">
        <h3 class="text-2xl font-bold text-white">Add Track to Album</h3>
        <button onclick="hideAddTrackModal()"
          class="text-gray-400 hover:text-white transition-colors duration-200 p-2 rounded-lg hover:bg-white/10">
          <i data-lucide="x" class="w-5 h-5"></i>
        </button>
      </div>

      <!-- Add Track Form -->
      <form id="add-track-form" class="space-y-6" novalidate>
        @Html.AntiForgeryToken()
        <input type="hidden" id="albumId" value="@Model.Id">

        <!-- Track Title -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-3">Track Title <span
              class="text-red-400">*</span></label>
          <input type="text" id="track-title" name="Title" placeholder="Enter track title..." required
            class="w-full bg-black/50 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-300">
          <div class="text-red-400 text-sm mt-1 hidden" id="title-error">Please enter a track title.</div>
        </div>

        <!-- Duration -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-3">Duration (seconds) <span
              class="text-red-400">*</span></label>
          <input type="number" id="track-duration" name="DurationInSeconds" placeholder="Enter duration in seconds..."
            required min="1"
            class="w-full bg-black/50 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-300">
          <div class="text-red-400 text-sm mt-1 hidden" id="duration-error">Please enter a valid duration.</div>
        </div>

        <!-- Genre -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-3">Genre</label>
          <select id="track-genre" name="Genre"
            class="w-full bg-black/50 border border-white/20 rounded-lg px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-accent focus:border-transparent transition-all duration-300">
            <option value="Pop">Pop</option>
            <option value="Rock">Rock</option>
            <option value="HipHop">Hip Hop</option>
            <option value="Electronic">Electronic</option>
            <option value="Jazz">Jazz</option>
            <option value="Classical">Classical</option>
            <option value="Country">Country</option>
            <option value="Blues">Blues</option>
            <option value="Reggae">Reggae</option>
            <option value="Folk">Folk</option>
            <option value="Metal">Metal</option>
            <option value="Punk">Punk</option>
            <option value="Funk">Funk</option>
            <option value="Soul">Soul</option>
            <option value="RnB">R&B</option>
            <option value="Alternative">Alternative</option>
            <option value="Indie">Indie</option>
            <option value="World">World</option>
            <option value="Other">Other</option>
          </select>
        </div>

        <!-- Audio File -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-3">Audio File</label>
          <input type="file" id="track-audio" name="AudioFile" accept="audio/*"
            class="w-full bg-black/50 border border-white/20 rounded-lg px-4 py-3 text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-accent file:text-black hover:file:bg-accent-dark transition-all duration-300">
        </div>

        <!-- Actions -->
        <div class="flex space-x-4 pt-4">
          <button type="button" onclick="hideAddTrackModal()"
            class="flex-1 bg-white/10 hover:bg-white/20 text-white px-6 py-3 rounded-lg font-medium transition-all duration-300">
            Cancel
          </button>
          <button type="submit"
            class="flex-1 bg-gradient-to-r from-accent to-accent-dark hover:from-accent-dark hover:to-accent text-black px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105">
            Add Track
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  .track-item:hover {
    transform: translateX(4px);
  }
</style>

<script src="~/js/album/albumDetails.js"></script>
